router 資料夾
router 目錄扮演著關鍵的角色，主要負責處理前端路由的配置和管理。Vue Router 是 Vue.js 官方的客戶端路由解決方案，適用於單頁應用（SPA）
，它將瀏覽器 URL 與用戶看到的內容綁定在一起。當用戶在應用程序中導航時，URL 將相應地更新，但不需要重新從服務器加載頁面。以下是 router 目錄
在 Vue.js 應用中的幾個主要功能：

1. 定義路由
router 目錄中的文件（通常是 index.js 或 index.ts）會定義應用程序的路由配置。這些路由配置告訴 Vue Router 在哪些 URL 路徑下顯示哪些組件。
每個路由配置是一個對象，包含 path（URL 路徑）、name（路由名稱，選填）和 component（對應的組件）。

2. 創建路由實例
在 router 目錄中，通常會使用 createRouter 函數創建一個路由實例。這個函數接受一個配置對象，其中包含 history（用於創建瀏覽歷史記錄的函數）
和 routes（路由配置的陣列）。

3. 导入和注册路由
在主入口文件（如 main.js 或 main.ts）中，需要導入剛才創建的路由實例，並使用 .use(router) 方法將其添加到 Vue 應用中。這樣，Vue Router 
就能夠開始監聽路由變化，並根據不同的 URL 路徑渲染相應的組件。

4. 使用 <router-view> 組件
在 Vue 應用的主要組件（如 App.vue）中，使用 <router-view> 組件來顯示路由匹配到的組件。當路由變化時，<router-view> 組件會自動更新，顯示新的組件。

5. 支持 SPA 的前端路由
通過 Vue Router，Vue.js 應用可以實現單頁應用的前端路由功能。這意味著用戶在應用程序內部導航時，不需要重新加載頁面，只需更新 URL 和顯示的內容即可。
這大大提升了應用程序的性能和用戶體驗。

總結來說，router 目錄在 Vue.js 應用中扮演著關鍵的角色，負責配置和管理前端路由，使得應用程序能夠提供單頁應用的前端路由功能，從而提供更流暢的用戶體驗。